package com.devteam.tutorial.algorithms.jdbc;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.sql.XAConnection;

public class TeacherDAO {

  private DbService service;

  public TeacherDAO(DbService dbService) {
    this.service = dbService;
  }

  // SQL Query CREATE
  public void createTable() throws SQLException {
    XAConnection connect = service.getConnection();
    String SQL = 
        "CREATE TABLE teacher("
        + "  id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,"
        + "  firstName VARCHAR(255)," 
        + "  lastName  VARCHAR(255)," 
        + "  age       INT," + ")";
    Statement st = connect.getConnection().createStatement();
    st.executeQuery(SQL);
    st.close();
    connect.close();
  }

  public Teacher retrieve(long teacherId) throws SQLException {
    XAConnection connect = service.getConnection();
    String SQL = "SELECT id, firstName, lastName, age FROM teacher WHERE id = " + teacherId;
    Statement st = connect.getConnection().createStatement();
    ResultSet resultSet = st.executeQuery(SQL);
    Teacher teacher = null;
    if (resultSet.next()) {
      teacher = retrieve(resultSet);
    }
    resultSet.close();
    connect.close();
    return teacher;

  }

  private Teacher retrieve(ResultSet rs) throws SQLException {
    Teacher teacher = new Teacher();
    teacher.setId(rs.getLong("id"));
    teacher.setName(rs.getString("firstName"));
    teacher.setLastName(rs.getString("lastName"));
    teacher.setAge(rs.getInt("age"));
    return teacher;
  }

  public List<Teacher> retrieveByFirstName(String fName) throws SQLException {
    List<Teacher> holder = new ArrayList<>();
    XAConnection conn = service.getConnection();
    Statement st = conn.getConnection().createStatement();
    String SQL = "SELECT id, firstName, lastName, age FROM teacher WHERE firstName = '" + fName + "'";
    ResultSet resultSet = st.executeQuery(SQL);
    while (resultSet.next()) {
      Teacher teacher = retrieve(resultSet);
      holder.add(teacher);
    }
    resultSet.close();
    conn.close();
    st.close();
    return holder;
  }

  public void insert(Teacher teacher) throws SQLException {
    XAConnection connect = service.getConnection();
    String SQL = "INSERT INTO teacher(firstName, lastName, age) VALUES (?, ?, ?)";
    PreparedStatement p = connect.getConnection().prepareStatement(SQL);
    p.setString(1, teacher.getName());
    p.setString(2, teacher.getLastName());
    p.setInt(3, teacher.getAge());
    p.execute();
    p.close();
    connect.close();
  }

  public int count() throws SQLException {
    XAConnection connect = service.getConnection();
    String SQL = "SELECT count(*) FROM teacher";
    Statement st = connect.getConnection().createStatement();
    ResultSet resultSet = st.executeQuery(SQL);
    resultSet.next();
    int count = resultSet.getInt(1);
    resultSet.close();
    st.close();
    connect.close();
    return count;
  }

  public void delete(Teacher teacher) throws SQLException {
    XAConnection connect = service.getConnection();
    String SQL = "DELETE TABLE teacher WHERE id=?";
    Statement st = connect.getConnection().createStatement();
    st.close();
    connect.close();
  }
}
