# Build Configuration  ############################

build:
  version: <<build.version>>

# Server Configuration ############################

server:
  port: 9090
  compression:
    enabled: true
    min-response-size: 2048
    # Comma-separated list of MIME types that should be compressed.
    mime-types: text/html,text/xml,text/plain,text/css,application/json,application/xml,application/javascript
  servlet:
    contextPath: /
    session:
      timeout: 1h
    multipart:
      max-request-size: 30MB
      max-file-size: 10MB

# Spring Configuration ############################

spring:
  main:
    banner-mode: off
    allow-bean-definition-overriding: false
  output:
    ansi:
      enabled: ALWAYS
  flyway:
    enabled: false


  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
    url: jdbc:h2:mem:testdb
    #jdbcUrl: jdbc:h2:${app.home}/data/db/h2/digitaldb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.H2Dialect
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

# Log Configuration ###########################

logging:
  config: classpath:logback-console.xml

# Hibernate And DB  Configuration #######################

hibernate:
  jdbc:
    batch_size: 30
    batch_versioned_data: true
  order_inserts: true
  order_updates: true
  show_sql: false
  dialect: org.hibernate.dialect.H2Dialect
  hbm2ddl:
    auto: update



---
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    #jdbcUrl: jdbc:h2:${app.home}/data/db/h2/digitaldb
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true

hibernate:
  dialect: org.hibernate.dialect.H2Dialect

---
spring:
  config:
    activate:
      on-profile: data

#app:
#  data:
#    init-sample: true
#    init-demo: false

---
#spring:
#  config:
#    activate:
#      on-profile: hsql
#  datasource:
#    jdbcUrl: jdbc:hsqldb:mem:digital
#    driverClassName: org.hsqldb.jdbcDriver
#    username: sa
#    password:
#  jpa:
#    database-platform: org.hibernate.dialect.HSQLDialect
#
#hibernate:
#  dialect: org.hibernate.dialect.HSQLDialect

#---
#spring:
#  config:
#    activate:
#      on-profile: postgres
#  datasource:
#    driverClassName: org.postgresql.Driver
#    jdbcUrl: jdbc:postgresql://localhost:5432/digitaldb
#    username: digital
#    password: digital
#  jpa:
#    database-platform:  org.hibernate.dialect.PostgreSQLDialect

#hibernate:
#  dialect: org.hibernate.dialect.PostgreSQLDialect
#---
spring:
  config:
    activate:
      on-profile: daemon

logging:
  config: classpath:logback-file.xml

---
spring:
  config:
    activate:
      on-profile: production

hibernate:
  hbm2ddl:
    auto: validate

logging:
  config: classpath:logback-file.xml

---
spring:
  config:
    activate:
      on-profile: flyway
  main:
    web-application-type: none
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0.0.0

hibernate:
  hbm2ddl:
    auto: update
---
spring:
  config:
    activate:
      on-profile: debug

logging:
  config: classpath:logback-console-debug.xml

---
spring:
  config:
    activate:
      on-profile: debug-all

logging:
  config: classpath:logback-console-debug-all.xml

# File storage path
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/digital/file/
    avatar: /home/digital/avatar/
  windows:
    path: C:\digital\file\
    avatar: C:\digital\avatar\
  # File size /M
  maxSize: 100
  avatarMaxSize: 5
#Email verification code valid time/second
code:
  expiration: 300

#Password encrypted transmission, front-end public key encryption, back-end private key decryption
rsa:
  private_key: MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0vfvyTdGJkdbHkB8mp0f3FE0GYP3AYPaJF7jUd1M0XxFSE2ceK3k2kw20YvQ09NJKk+OMjWQl9WitG9pB6tSCQIDAQABAkA2SimBrWC2/wvauBuYqjCFwLvYiRYqZKThUS3MZlebXJiLB+Ue/gUifAAKIg1avttUZsHBHrop4qfJCwAI0+YRAiEA+W3NK/RaXtnRqmoUUkb59zsZUBLpvZgQPfj1MhyHDz0CIQDYhsAhPJ3mgS64NbUZmGWuuNKp5coY2GIj/zYDMJp6vQIgUueLFXv/eZ1ekgz2Oi67MNCk5jeTF2BurZqNLR3MSmUCIFT3Q6uHMtsB9Eha4u7hS31tj1UWE+D+ADzp59MGnoftAiBeHT7gDMuqeJHPL4b+kC+gzV4FGTfhR9q3tTbklZkD2A==

#jwt
jwt:
  header: Authorization
  # Token prefix
  token-start-with: Bearer
  # The token must be encoded with a Base64 of at least 88 bits
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  # The token expiration time is here in units/milliseconds, the default is 4 hours, which can be generated on this website https://www.convertworld.com/en/time/milliseconds.html
  token-validity-in-seconds: 14400000
  #Online user key
  online-key: online-token-
  # Verification code
  code-key: code-key-
  # The token renewal check time range (default 30 minutes, in milliseconds). If the user operates within a period of time when the token is about to expire, the user's token will be renewed
  detect: 1800000
  # Renewal time range, the default is 1 hour, in milliseconds
  renew: 3600000

# Login related configuration
login:
  # Login cache
  cache-enable: true
  #  Whether to restrict single user login
  single-login: false
  #  Verification code
  login-code:
    #  Verification code type configuration View LoginProperties class
    code-type: arithmetic
    #  Login graphic verification code valid time/minute
    expiration: 2
    #  Verification code height
    width: 111
    #Verification code width
    heigth: 36
    # Content length
    length: 2
    # Font name, use the default font if blank
    font-name:
    # font size
    font-size: 25
